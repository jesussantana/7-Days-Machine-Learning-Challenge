glimpse(df)
#skim(df) Actualización: skimr parece no estar funcionando en Rstudio cloud por algún tipo de actualización que necesitan hacer. Mientras tanto déjalo así comentado en el código (con la parrilla), y fíjate en cómo sale en el vídeo para entenderlo. Cuando vuelva a funcionar le volveré a quitar la parrilla para que se ejecute de nuevo
# Chunk 5
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
# Chunk 6
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
# Chunk 7
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Hacemos análisis de correlaciones
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
# Chunk 8
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
# Chunk 9
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es Failure
formula <- reformulate(indep,target)
# Chunk 10
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 11
indep_fin <- c('Temperature','Humidity','Measure9')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
# Chunk 12
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 13
df$scoring <- predict(rl,df,type='response')
# Chunk 14
#Como la penetración inicial era del 1%, vamos a poner un punto de corte muy alto, por ejemplo por encima del 80%
df$prediccion <- ifelse(df$scoring > 0.8,1,0)
# Chunk 15
table(df$prediccion,df$Failure)
# Chunk 16
#Vamos a ver qué pasa si bajamos la decisión al 60%
df$prediccion <- ifelse(df$scoring > 0.6,1,0)
# Chunk 17
table(df$prediccion,df$Failure)
options(scipen=999)#Desactiva la notacion cientifica
#Instalar librerías
#install.packages('dplyr') #para manipular datos
#install.packages('skimr') #para exploración inicial
#install.packages('lubridate') #para manipular fechas
#install.packages('tidyr') #para manipular datos
#install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
options(scipen=999)#Desactiva la notacion cientifica
#Instalar librerías
#install.packages('dplyr') #para manipular datos
#install.packages('skimr') #para exploración inicial
#install.packages('lubridate') #para manipular fechas
#install.packages('tidyr') #para manipular datos
#install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
df <- read.csv(file = '../data/raw/Machine_Failure_Control.csv',sep=';')
#Visión general
glimpse(df)
#skim(df) Actualización: skimr parece no estar funcionando en Rstudio cloud por algún tipo de actualización que necesitan hacer. Mientras tanto déjalo así comentado en el código (con la parrilla), y fíjate en cómo sale en el vídeo para entenderlo. Cuando vuelva a funcionar le volveré a quitar la parrilla para que se ejecute de nuevo
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Hacemos análisis de correlaciones
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es Failure
formula <- reformulate(indep,target)
indep
formula
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es Failure
formula <- reformulate(indep,target)
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 1
options(scipen=999)#Desactiva la notacion cientifica
# Chunk 2
#Instalar librerías
#install.packages('dplyr') #para manipular datos
#install.packages('skimr') #para exploración inicial
#install.packages('lubridate') #para manipular fechas
#install.packages('tidyr') #para manipular datos
#install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
# Chunk 3
df <- read.csv(file = '../data/raw/Machine_Failure_Control.csv',sep=';')
# Chunk 4
#Visión general
glimpse(df)
#skim(df) Actualización: skimr parece no estar funcionando en Rstudio cloud por algún tipo de actualización que necesitan hacer. Mientras tanto déjalo así comentado en el código (con la parrilla), y fíjate en cómo sale en el vídeo para entenderlo. Cuando vuelva a funcionar le volveré a quitar la parrilla para que se ejecute de nuevo
# Chunk 5
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
# Chunk 6
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
# Chunk 7
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Hacemos análisis de correlaciones
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
# Chunk 8
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
# Chunk 9
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es Failure
formula <- reformulate(indep,target)
# Chunk 10
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 11
indep_fin <- c('Temperature','Humidity','Measure9')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
# Chunk 12
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 13
df$scoring <- predict(rl,df,type='response')
# Chunk 14
#Como la penetración inicial era del 1%, vamos a poner un punto de corte muy alto, por ejemplo por encima del 80%
df$prediccion <- ifelse(df$scoring > 0.8,1,0)
# Chunk 15
table(df$prediccion,df$Failure)
# Chunk 16
#Vamos a ver qué pasa si bajamos la decisión al 60%
df$prediccion <- ifelse(df$scoring > 0.6,1,0)
# Chunk 17
table(df$prediccion,df$Failure)
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 1
options(scipen=999)#Desactiva la notacion cientifica
# Chunk 2
#Instalar librerías
#install.packages('dplyr') #para manipular datos
#install.packages('skimr') #para exploración inicial
#install.packages('lubridate') #para manipular fechas
#install.packages('tidyr') #para manipular datos
#install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
# Chunk 3
df <- read.csv(file = '../data/raw/Machine_Failure_Control.csv',sep=';')
# Chunk 4
#Visión general
glimpse(df)
#skim(df) Actualización: skimr parece no estar funcionando en Rstudio cloud por algún tipo de actualización que necesitan hacer. Mientras tanto déjalo así comentado en el código (con la parrilla), y fíjate en cómo sale en el vídeo para entenderlo. Cuando vuelva a funcionar le volveré a quitar la parrilla para que se ejecute de nuevo
# Chunk 5
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
# Chunk 6
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
# Chunk 7
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Hacemos análisis de correlaciones
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
# Chunk 8
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
# Chunk 9
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es Failure
formula <- reformulate(indep,target)
# Chunk 1
options(scipen=999)#Desactiva la notacion cientifica
# Chunk 2
#Instalar librerías
#install.packages('dplyr') #para manipular datos
#install.packages('skimr') #para exploración inicial
#install.packages('lubridate') #para manipular fechas
#install.packages('tidyr') #para manipular datos
#install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
# Chunk 3
df <- read.csv(file = '../data/raw/Machine_Failure_Control.csv',sep=';')
# Chunk 4
#Visión general
glimpse(df)
#skim(df) Actualización: skimr parece no estar funcionando en Rstudio cloud por algún tipo de actualización que necesitan hacer. Mientras tanto déjalo así comentado en el código (con la parrilla), y fíjate en cómo sale en el vídeo para entenderlo. Cuando vuelva a funcionar le volveré a quitar la parrilla para que se ejecute de nuevo
# Chunk 5
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
# Chunk 6
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
# Chunk 7
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Hacemos análisis de correlaciones
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
# Chunk 8
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
# Chunk 9
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es Failure
formula <- reformulate(indep,target)
# Chunk 10
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 11
indep_fin <- c('Temperature','Humidity','Measure9')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
# Chunk 12
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 13
df$scoring <- predict(rl,df,type='response')
# Chunk 14
#Como la penetración inicial era del 1%, vamos a poner un punto de corte muy alto, por ejemplo por encima del 80%
df$prediccion <- ifelse(df$scoring > 0.8,1,0)
# Chunk 15
table(df$prediccion,df$Failure)
# Chunk 16
#Vamos a ver qué pasa si bajamos la decisión al 60%
df$prediccion <- ifelse(df$scoring > 0.6,1,0)
# Chunk 17
table(df$prediccion,df$Failure)
# Chunk 1
options(scipen=999)#Desactiva la notacion cientifica
# Chunk 2
#Instalar librerías
#install.packages('dplyr') #para manipular datos
#install.packages('skimr') #para exploración inicial
#install.packages('lubridate') #para manipular fechas
#install.packages('tidyr') #para manipular datos
#install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
# Chunk 3
df <- read.csv(file = '../data/raw/Machine_Failure_Control.csv',sep=';')
# Chunk 4
#Visión general
glimpse(df)
#skim(df) Actualización: skimr parece no estar funcionando en Rstudio cloud por algún tipo de actualización que necesitan hacer. Mientras tanto déjalo así comentado en el código (con la parrilla), y fíjate en cómo sale en el vídeo para entenderlo. Cuando vuelva a funcionar le volveré a quitar la parrilla para que se ejecute de nuevo
# Chunk 5
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
# Chunk 6
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
# Chunk 7
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Hacemos análisis de correlaciones
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
# Chunk 8
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
# Chunk 9
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es Failure
formula <- reformulate(indep,target)
# Chunk 10
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 11
indep_fin <- c('Temperature','Humidity','Measure9')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
# Chunk 12
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
# Chunk 13
df$scoring <- predict(rl,df,type='response')
# Chunk 14
#Como la penetración inicial era del 1%, vamos a poner un punto de corte muy alto, por ejemplo por encima del 80%
df$prediccion <- ifelse(df$scoring > 0.8,1,0)
# Chunk 15
table(df$prediccion,df$Failure)
# Chunk 16
#Vamos a ver qué pasa si bajamos la decisión al 60%
df$prediccion <- ifelse(df$scoring > 0.6,1,0)
# Chunk 17
table(df$prediccion,df$Failure)
